/*
 * generated by Xtext 2.10.0
 */
package org.smalluml.ide.contentassist.antlr;

import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.smalluml.ide.contentassist.antlr.internal.InternalSmallUMLParser;
import org.smalluml.services.SmallUMLGrammarAccess;

public class SmallUMLParser extends AbstractContentAssistParser {

	@Inject
	private SmallUMLGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalSmallUMLParser createParser() {
		InternalSmallUMLParser result = new InternalSmallUMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getPackageAccess().getGroup(), "rule__Package__Group__0");
					put(grammarAccess.getPackageAccess().getGroup_3(), "rule__Package__Group_3__0");
					put(grammarAccess.getPackageAccess().getGroup_3_3(), "rule__Package__Group_3_3__0");
					put(grammarAccess.getPackageAccess().getGroup_4(), "rule__Package__Group_4__0");
					put(grammarAccess.getPackageAccess().getGroup_4_3(), "rule__Package__Group_4_3__0");
					put(grammarAccess.getClassAccess().getGroup(), "rule__Class__Group__0");
					put(grammarAccess.getClassAccess().getGroup_4(), "rule__Class__Group_4__0");
					put(grammarAccess.getClassAccess().getGroup_4_3(), "rule__Class__Group_4_3__0");
					put(grammarAccess.getClassAccess().getGroup_5(), "rule__Class__Group_5__0");
					put(grammarAccess.getClassAccess().getGroup_5_3(), "rule__Class__Group_5_3__0");
					put(grammarAccess.getClassAccess().getGroup_6(), "rule__Class__Group_6__0");
					put(grammarAccess.getClassAccess().getGroup_6_3(), "rule__Class__Group_6_3__0");
					put(grammarAccess.getRelationAccess().getGroup(), "rule__Relation__Group__0");
					put(grammarAccess.getAttributeAccess().getGroup(), "rule__Attribute__Group__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getMethodAccess().getGroup_4(), "rule__Method__Group_4__0");
					put(grammarAccess.getMethodAccess().getGroup_5(), "rule__Method__Group_5__0");
					put(grammarAccess.getMethodAccess().getGroup_5_3(), "rule__Method__Group_5_3__0");
					put(grammarAccess.getType_ImplAccess().getGroup(), "rule__Type_Impl__Group__0");
					put(grammarAccess.getBooleanAccess().getGroup(), "rule__Boolean__Group__0");
					put(grammarAccess.getRealAccess().getGroup(), "rule__Real__Group__0");
					put(grammarAccess.getIntegerAccess().getGroup(), "rule__Integer__Group__0");
					put(grammarAccess.getString0Access().getGroup(), "rule__String0__Group__0");
					put(grammarAccess.getInfinityAccess().getGroup(), "rule__Infinity__Group__0");
					put(grammarAccess.getEnumerationAccess().getGroup(), "rule__Enumeration__Group__0");
					put(grammarAccess.getEnumerationAccess().getGroup_6(), "rule__Enumeration__Group_6__0");
					put(grammarAccess.getCardinalityAccess().getGroup(), "rule__Cardinality__Group__0");
					put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
					put(grammarAccess.getPackageAccess().getClassAssignment_3_2(), "rule__Package__ClassAssignment_3_2");
					put(grammarAccess.getPackageAccess().getClassAssignment_3_3_1(), "rule__Package__ClassAssignment_3_3_1");
					put(grammarAccess.getPackageAccess().getRelationAssignment_4_2(), "rule__Package__RelationAssignment_4_2");
					put(grammarAccess.getPackageAccess().getRelationAssignment_4_3_1(), "rule__Package__RelationAssignment_4_3_1");
					put(grammarAccess.getClassAccess().getNameAssignment_2(), "rule__Class__NameAssignment_2");
					put(grammarAccess.getClassAccess().getParentsAssignment_4_2(), "rule__Class__ParentsAssignment_4_2");
					put(grammarAccess.getClassAccess().getParentsAssignment_4_3_1(), "rule__Class__ParentsAssignment_4_3_1");
					put(grammarAccess.getClassAccess().getAttributesAssignment_5_2(), "rule__Class__AttributesAssignment_5_2");
					put(grammarAccess.getClassAccess().getAttributesAssignment_5_3_1(), "rule__Class__AttributesAssignment_5_3_1");
					put(grammarAccess.getClassAccess().getMethodsAssignment_6_2(), "rule__Class__MethodsAssignment_6_2");
					put(grammarAccess.getClassAccess().getMethodsAssignment_6_3_1(), "rule__Class__MethodsAssignment_6_3_1");
					put(grammarAccess.getRelationAccess().getNameAssignment_1(), "rule__Relation__NameAssignment_1");
					put(grammarAccess.getRelationAccess().getFromAssignment_4(), "rule__Relation__FromAssignment_4");
					put(grammarAccess.getRelationAccess().getToAssignment_6(), "rule__Relation__ToAssignment_6");
					put(grammarAccess.getRelationAccess().getCardinalityAssignment_8(), "rule__Relation__CardinalityAssignment_8");
					put(grammarAccess.getAttributeAccess().getNameAssignment_1(), "rule__Attribute__NameAssignment_1");
					put(grammarAccess.getAttributeAccess().getTypedValueAssignment_4(), "rule__Attribute__TypedValueAssignment_4");
					put(grammarAccess.getMethodAccess().getNameAssignment_2(), "rule__Method__NameAssignment_2");
					put(grammarAccess.getMethodAccess().getReturnTypedValueAssignment_4_1(), "rule__Method__ReturnTypedValueAssignment_4_1");
					put(grammarAccess.getMethodAccess().getParametersAssignment_5_2(), "rule__Method__ParametersAssignment_5_2");
					put(grammarAccess.getMethodAccess().getParametersAssignment_5_3_1(), "rule__Method__ParametersAssignment_5_3_1");
					put(grammarAccess.getEnumerationAccess().getNameAssignment_1(), "rule__Enumeration__NameAssignment_1");
					put(grammarAccess.getEnumerationAccess().getValueAssignment_5(), "rule__Enumeration__ValueAssignment_5");
					put(grammarAccess.getEnumerationAccess().getValueAssignment_6_1(), "rule__Enumeration__ValueAssignment_6_1");
					put(grammarAccess.getCardinalityAccess().getLowerBoundAssignment_3(), "rule__Cardinality__LowerBoundAssignment_3");
					put(grammarAccess.getCardinalityAccess().getUpperBoundAssignment_5(), "rule__Cardinality__UpperBoundAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalSmallUMLParser typedParser = (InternalSmallUMLParser) parser;
			typedParser.entryRulePackage();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public SmallUMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(SmallUMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
