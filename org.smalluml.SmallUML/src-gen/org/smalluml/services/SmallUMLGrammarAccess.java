/*
 * generated by Xtext 2.10.0
 */
package org.smalluml.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class SmallUMLGrammarAccess extends AbstractGrammarElementFinder {
	
	public class PackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Package");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPackageAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPackageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cClassKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cClassAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cClassClassParserRuleCall_3_2_0 = (RuleCall)cClassAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cClassAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cClassClassParserRuleCall_3_3_1_0 = (RuleCall)cClassAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cRelationKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cRelationAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final RuleCall cRelationRelationParserRuleCall_4_2_0 = (RuleCall)cRelationAssignment_4_2.eContents().get(0);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cRelationAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final RuleCall cRelationRelationParserRuleCall_4_3_1_0 = (RuleCall)cRelationAssignment_4_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Package:
		//	{Package}
		//	'Package'
		//	'{' ('class' '{' class+=Class ("," class+=Class)* '}')? ('relation' '{' relation+=Relation ("," relation+=Relation)*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Package} 'Package' '{' ('class' '{' class+=Class ("," class+=Class)* '}')? ('relation' '{' relation+=Relation (","
		//relation+=Relation)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Package}
		public Action getPackageAction_0() { return cPackageAction_0; }
		
		//'Package'
		public Keyword getPackageKeyword_1() { return cPackageKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('class' '{' class+=Class ("," class+=Class)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'class'
		public Keyword getClassKeyword_3_0() { return cClassKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//class+=Class
		public Assignment getClassAssignment_3_2() { return cClassAssignment_3_2; }
		
		//Class
		public RuleCall getClassClassParserRuleCall_3_2_0() { return cClassClassParserRuleCall_3_2_0; }
		
		//("," class+=Class)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//class+=Class
		public Assignment getClassAssignment_3_3_1() { return cClassAssignment_3_3_1; }
		
		//Class
		public RuleCall getClassClassParserRuleCall_3_3_1_0() { return cClassClassParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//('relation' '{' relation+=Relation ("," relation+=Relation)* '}')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'relation'
		public Keyword getRelationKeyword_4_0() { return cRelationKeyword_4_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4_1() { return cLeftCurlyBracketKeyword_4_1; }
		
		//relation+=Relation
		public Assignment getRelationAssignment_4_2() { return cRelationAssignment_4_2; }
		
		//Relation
		public RuleCall getRelationRelationParserRuleCall_4_2_0() { return cRelationRelationParserRuleCall_4_2_0; }
		
		//("," relation+=Relation)*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//relation+=Relation
		public Assignment getRelationAssignment_4_3_1() { return cRelationAssignment_4_3_1; }
		
		//Relation
		public RuleCall getRelationRelationParserRuleCall_4_3_1_0() { return cRelationRelationParserRuleCall_4_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4_4() { return cRightCurlyBracketKeyword_4_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Type");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cType_ImplParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBooleanParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cRealParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cIntegerParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cString0ParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cInfinityParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cEnumerationParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//Type:
		//	Type_Impl | Boolean | Real | Integer | String0 | Infinity | Enumeration;
		@Override public ParserRule getRule() { return rule; }
		
		//Type_Impl | Boolean | Real | Integer | String0 | Infinity | Enumeration
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Type_Impl
		public RuleCall getType_ImplParserRuleCall_0() { return cType_ImplParserRuleCall_0; }
		
		//Boolean
		public RuleCall getBooleanParserRuleCall_1() { return cBooleanParserRuleCall_1; }
		
		//Real
		public RuleCall getRealParserRuleCall_2() { return cRealParserRuleCall_2; }
		
		//Integer
		public RuleCall getIntegerParserRuleCall_3() { return cIntegerParserRuleCall_3; }
		
		//String0
		public RuleCall getString0ParserRuleCall_4() { return cString0ParserRuleCall_4; }
		
		//Infinity
		public RuleCall getInfinityParserRuleCall_5() { return cInfinityParserRuleCall_5; }
		
		//Enumeration
		public RuleCall getEnumerationParserRuleCall_6() { return cEnumerationParserRuleCall_6; }
	}
	public class ClassElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Class");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cClassAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cClassKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cParentsKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Assignment cParentsAssignment_4_2 = (Assignment)cGroup_4.eContents().get(2);
		private final CrossReference cParentsClassCrossReference_4_2_0 = (CrossReference)cParentsAssignment_4_2.eContents().get(0);
		private final RuleCall cParentsClassEStringParserRuleCall_4_2_0_1 = (RuleCall)cParentsClassCrossReference_4_2_0.eContents().get(1);
		private final Group cGroup_4_3 = (Group)cGroup_4.eContents().get(3);
		private final Keyword cCommaKeyword_4_3_0 = (Keyword)cGroup_4_3.eContents().get(0);
		private final Assignment cParentsAssignment_4_3_1 = (Assignment)cGroup_4_3.eContents().get(1);
		private final CrossReference cParentsClassCrossReference_4_3_1_0 = (CrossReference)cParentsAssignment_4_3_1.eContents().get(0);
		private final RuleCall cParentsClassEStringParserRuleCall_4_3_1_0_1 = (RuleCall)cParentsClassCrossReference_4_3_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4_4 = (Keyword)cGroup_4.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cAttributesKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cAttributesAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cAttributesAttributeParserRuleCall_5_2_0 = (RuleCall)cAttributesAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cAttributesAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cAttributesAttributeParserRuleCall_5_3_1_0 = (RuleCall)cAttributesAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cMethodsKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cMethodsAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cMethodsMethodParserRuleCall_6_2_0 = (RuleCall)cMethodsAssignment_6_2.eContents().get(0);
		private final Group cGroup_6_3 = (Group)cGroup_6.eContents().get(3);
		private final Keyword cCommaKeyword_6_3_0 = (Keyword)cGroup_6_3.eContents().get(0);
		private final Assignment cMethodsAssignment_6_3_1 = (Assignment)cGroup_6_3.eContents().get(1);
		private final RuleCall cMethodsMethodParserRuleCall_6_3_1_0 = (RuleCall)cMethodsAssignment_6_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6_4 = (Keyword)cGroup_6.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Class:
		//	{Class}
		//	'Class'
		//	name=EString
		//	'{' ('parents' '(' parents+=[Class|EString] ("," parents+=[Class|EString])* ')')? ('attributes' '{'
		//	attributes+=Attribute ("," attributes+=Attribute)* '}')? ('methods' '{' methods+=Method ("," methods+=Method)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Class} 'Class' name=EString '{' ('parents' '(' parents+=[Class|EString] ("," parents+=[Class|EString])* ')')?
		//('attributes' '{' attributes+=Attribute ("," attributes+=Attribute)* '}')? ('methods' '{' methods+=Method (","
		//methods+=Method)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Class}
		public Action getClassAction_0() { return cClassAction_0; }
		
		//'Class'
		public Keyword getClassKeyword_1() { return cClassKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('parents' '(' parents+=[Class|EString] ("," parents+=[Class|EString])* ')')?
		public Group getGroup_4() { return cGroup_4; }
		
		//'parents'
		public Keyword getParentsKeyword_4_0() { return cParentsKeyword_4_0; }
		
		//'('
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }
		
		//parents+=[Class|EString]
		public Assignment getParentsAssignment_4_2() { return cParentsAssignment_4_2; }
		
		//[Class|EString]
		public CrossReference getParentsClassCrossReference_4_2_0() { return cParentsClassCrossReference_4_2_0; }
		
		//EString
		public RuleCall getParentsClassEStringParserRuleCall_4_2_0_1() { return cParentsClassEStringParserRuleCall_4_2_0_1; }
		
		//("," parents+=[Class|EString])*
		public Group getGroup_4_3() { return cGroup_4_3; }
		
		//","
		public Keyword getCommaKeyword_4_3_0() { return cCommaKeyword_4_3_0; }
		
		//parents+=[Class|EString]
		public Assignment getParentsAssignment_4_3_1() { return cParentsAssignment_4_3_1; }
		
		//[Class|EString]
		public CrossReference getParentsClassCrossReference_4_3_1_0() { return cParentsClassCrossReference_4_3_1_0; }
		
		//EString
		public RuleCall getParentsClassEStringParserRuleCall_4_3_1_0_1() { return cParentsClassEStringParserRuleCall_4_3_1_0_1; }
		
		//')'
		public Keyword getRightParenthesisKeyword_4_4() { return cRightParenthesisKeyword_4_4; }
		
		//('attributes' '{' attributes+=Attribute ("," attributes+=Attribute)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'attributes'
		public Keyword getAttributesKeyword_5_0() { return cAttributesKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_5_2() { return cAttributesAssignment_5_2; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_5_2_0() { return cAttributesAttributeParserRuleCall_5_2_0; }
		
		//("," attributes+=Attribute)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//attributes+=Attribute
		public Assignment getAttributesAssignment_5_3_1() { return cAttributesAssignment_5_3_1; }
		
		//Attribute
		public RuleCall getAttributesAttributeParserRuleCall_5_3_1_0() { return cAttributesAttributeParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//('methods' '{' methods+=Method ("," methods+=Method)* '}')?
		public Group getGroup_6() { return cGroup_6; }
		
		//'methods'
		public Keyword getMethodsKeyword_6_0() { return cMethodsKeyword_6_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_6_1() { return cLeftCurlyBracketKeyword_6_1; }
		
		//methods+=Method
		public Assignment getMethodsAssignment_6_2() { return cMethodsAssignment_6_2; }
		
		//Method
		public RuleCall getMethodsMethodParserRuleCall_6_2_0() { return cMethodsMethodParserRuleCall_6_2_0; }
		
		//("," methods+=Method)*
		public Group getGroup_6_3() { return cGroup_6_3; }
		
		//","
		public Keyword getCommaKeyword_6_3_0() { return cCommaKeyword_6_3_0; }
		
		//methods+=Method
		public Assignment getMethodsAssignment_6_3_1() { return cMethodsAssignment_6_3_1; }
		
		//Method
		public RuleCall getMethodsMethodParserRuleCall_6_3_1_0() { return cMethodsMethodParserRuleCall_6_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6_4() { return cRightCurlyBracketKeyword_6_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RelationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Relation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRelationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cFromClassCrossReference_4_0 = (CrossReference)cFromAssignment_4.eContents().get(0);
		private final RuleCall cFromClassEStringParserRuleCall_4_0_1 = (RuleCall)cFromClassCrossReference_4_0.eContents().get(1);
		private final Keyword cToKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cToAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cToClassCrossReference_6_0 = (CrossReference)cToAssignment_6.eContents().get(0);
		private final RuleCall cToClassEStringParserRuleCall_6_0_1 = (RuleCall)cToClassCrossReference_6_0.eContents().get(1);
		private final Keyword cCardinalityKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cCardinalityAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCardinalityCardinalityParserRuleCall_8_0 = (RuleCall)cCardinalityAssignment_8.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Relation:
		//	'Relation'
		//	name=EString
		//	'{'
		//	'from' from=[Class|EString]
		//	'to' to=[Class|EString]
		//	'cardinality' cardinality=Cardinality
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Relation' name=EString '{' 'from' from=[Class|EString] 'to' to=[Class|EString] 'cardinality' cardinality=Cardinality
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Relation'
		public Keyword getRelationKeyword_0() { return cRelationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'from'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//from=[Class|EString]
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }
		
		//[Class|EString]
		public CrossReference getFromClassCrossReference_4_0() { return cFromClassCrossReference_4_0; }
		
		//EString
		public RuleCall getFromClassEStringParserRuleCall_4_0_1() { return cFromClassEStringParserRuleCall_4_0_1; }
		
		//'to'
		public Keyword getToKeyword_5() { return cToKeyword_5; }
		
		//to=[Class|EString]
		public Assignment getToAssignment_6() { return cToAssignment_6; }
		
		//[Class|EString]
		public CrossReference getToClassCrossReference_6_0() { return cToClassCrossReference_6_0; }
		
		//EString
		public RuleCall getToClassEStringParserRuleCall_6_0_1() { return cToClassEStringParserRuleCall_6_0_1; }
		
		//'cardinality'
		public Keyword getCardinalityKeyword_7() { return cCardinalityKeyword_7; }
		
		//cardinality=Cardinality
		public Assignment getCardinalityAssignment_8() { return cCardinalityAssignment_8; }
		
		//Cardinality
		public RuleCall getCardinalityCardinalityParserRuleCall_8_0() { return cCardinalityCardinalityParserRuleCall_8_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString:
		//	STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class AttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Attribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAttributeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cTypedValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTypedValueAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTypedValueTypeParserRuleCall_4_0 = (RuleCall)cTypedValueAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Attribute:
		//	'Attribute'
		//	name=EString
		//	'{'
		//	'typedValue' typedValue=Type
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Attribute' name=EString '{' 'typedValue' typedValue=Type '}'
		public Group getGroup() { return cGroup; }
		
		//'Attribute'
		public Keyword getAttributeKeyword_0() { return cAttributeKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'typedValue'
		public Keyword getTypedValueKeyword_3() { return cTypedValueKeyword_3; }
		
		//typedValue=Type
		public Assignment getTypedValueAssignment_4() { return cTypedValueAssignment_4; }
		
		//Type
		public RuleCall getTypedValueTypeParserRuleCall_4_0() { return cTypedValueTypeParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class MethodElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Method");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMethodAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMethodKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cReturnTypedValueKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cReturnTypedValueAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cReturnTypedValueTypeParserRuleCall_4_1_0 = (RuleCall)cReturnTypedValueAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cParametersKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cParametersAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cParametersAttributeParserRuleCall_5_2_0 = (RuleCall)cParametersAssignment_5_2.eContents().get(0);
		private final Group cGroup_5_3 = (Group)cGroup_5.eContents().get(3);
		private final Keyword cCommaKeyword_5_3_0 = (Keyword)cGroup_5_3.eContents().get(0);
		private final Assignment cParametersAssignment_5_3_1 = (Assignment)cGroup_5_3.eContents().get(1);
		private final RuleCall cParametersAttributeParserRuleCall_5_3_1_0 = (RuleCall)cParametersAssignment_5_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5_4 = (Keyword)cGroup_5.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Method:
		//	{Method}
		//	'Method'
		//	name=EString
		//	'{' ('returnTypedValue' returnTypedValue=Type)? ('parameters' '{' parameters+=Attribute ("," parameters+=Attribute)*
		//	'}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Method} 'Method' name=EString '{' ('returnTypedValue' returnTypedValue=Type)? ('parameters' '{' parameters+=Attribute
		//("," parameters+=Attribute)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Method}
		public Action getMethodAction_0() { return cMethodAction_0; }
		
		//'Method'
		public Keyword getMethodKeyword_1() { return cMethodKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//('returnTypedValue' returnTypedValue=Type)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'returnTypedValue'
		public Keyword getReturnTypedValueKeyword_4_0() { return cReturnTypedValueKeyword_4_0; }
		
		//returnTypedValue=Type
		public Assignment getReturnTypedValueAssignment_4_1() { return cReturnTypedValueAssignment_4_1; }
		
		//Type
		public RuleCall getReturnTypedValueTypeParserRuleCall_4_1_0() { return cReturnTypedValueTypeParserRuleCall_4_1_0; }
		
		//('parameters' '{' parameters+=Attribute ("," parameters+=Attribute)* '}')?
		public Group getGroup_5() { return cGroup_5; }
		
		//'parameters'
		public Keyword getParametersKeyword_5_0() { return cParametersKeyword_5_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_5_1() { return cLeftCurlyBracketKeyword_5_1; }
		
		//parameters+=Attribute
		public Assignment getParametersAssignment_5_2() { return cParametersAssignment_5_2; }
		
		//Attribute
		public RuleCall getParametersAttributeParserRuleCall_5_2_0() { return cParametersAttributeParserRuleCall_5_2_0; }
		
		//("," parameters+=Attribute)*
		public Group getGroup_5_3() { return cGroup_5_3; }
		
		//","
		public Keyword getCommaKeyword_5_3_0() { return cCommaKeyword_5_3_0; }
		
		//parameters+=Attribute
		public Assignment getParametersAssignment_5_3_1() { return cParametersAssignment_5_3_1; }
		
		//Attribute
		public RuleCall getParametersAttributeParserRuleCall_5_3_1_0() { return cParametersAttributeParserRuleCall_5_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5_4() { return cRightCurlyBracketKeyword_5_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Type_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Type_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTypeKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Type_Impl Type:
		//	{Type}
		//	'Type'
		@Override public ParserRule getRule() { return rule; }
		
		//{Type} 'Type'
		public Group getGroup() { return cGroup; }
		
		//{Type}
		public Action getTypeAction_0() { return cTypeAction_0; }
		
		//'Type'
		public Keyword getTypeKeyword_1() { return cTypeKeyword_1; }
	}
	public class BooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Boolean");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBooleanAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBooleanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Boolean:
		//	{Boolean}
		//	'Boolean';
		@Override public ParserRule getRule() { return rule; }
		
		//{Boolean} 'Boolean'
		public Group getGroup() { return cGroup; }
		
		//{Boolean}
		public Action getBooleanAction_0() { return cBooleanAction_0; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_1() { return cBooleanKeyword_1; }
	}
	public class RealElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Real");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRealAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRealKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Real:
		//	{Real}
		//	'Real';
		@Override public ParserRule getRule() { return rule; }
		
		//{Real} 'Real'
		public Group getGroup() { return cGroup; }
		
		//{Real}
		public Action getRealAction_0() { return cRealAction_0; }
		
		//'Real'
		public Keyword getRealKeyword_1() { return cRealKeyword_1; }
	}
	public class IntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Integer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cIntegerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntegerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Integer:
		//	{Integer}
		//	'Integer';
		@Override public ParserRule getRule() { return rule; }
		
		//{Integer} 'Integer'
		public Group getGroup() { return cGroup; }
		
		//{Integer}
		public Action getIntegerAction_0() { return cIntegerAction_0; }
		
		//'Integer'
		public Keyword getIntegerKeyword_1() { return cIntegerKeyword_1; }
	}
	public class String0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.String0");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cStringAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//String0 String:
		//	{String}
		//	'String'
		@Override public ParserRule getRule() { return rule; }
		
		//{String} 'String'
		public Group getGroup() { return cGroup; }
		
		//{String}
		public Action getStringAction_0() { return cStringAction_0; }
		
		//'String'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
	}
	public class InfinityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Infinity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInfinityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cInfinityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Infinity:
		//	{Infinity}
		//	'Infinity';
		@Override public ParserRule getRule() { return rule; }
		
		//{Infinity} 'Infinity'
		public Group getGroup() { return cGroup; }
		
		//{Infinity}
		public Action getInfinityAction_0() { return cInfinityAction_0; }
		
		//'Infinity'
		public Keyword getInfinityKeyword_1() { return cInfinityKeyword_1; }
	}
	public class EnumerationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Enumeration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnumerationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cValueKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueString0ParserRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValueString0ParserRuleCall_6_1_0 = (RuleCall)cValueAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Enumeration:
		//	'Enumeration'
		//	name=EString
		//	'{'
		//	'value' '{' value+=String0 ("," value+=String0)* '}'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Enumeration' name=EString '{' 'value' '{' value+=String0 ("," value+=String0)* '}' '}'
		public Group getGroup() { return cGroup; }
		
		//'Enumeration'
		public Keyword getEnumerationKeyword_0() { return cEnumerationKeyword_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'value'
		public Keyword getValueKeyword_3() { return cValueKeyword_3; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }
		
		//value+=String0
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }
		
		//String0
		public RuleCall getValueString0ParserRuleCall_5_0() { return cValueString0ParserRuleCall_5_0; }
		
		//("," value+=String0)*
		public Group getGroup_6() { return cGroup_6; }
		
		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//value+=String0
		public Assignment getValueAssignment_6_1() { return cValueAssignment_6_1; }
		
		//String0
		public RuleCall getValueString0ParserRuleCall_6_1_0() { return cValueString0ParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	public class CardinalityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.Cardinality");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCardinalityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLowerBoundKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLowerBoundAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLowerBoundEIntParserRuleCall_3_0 = (RuleCall)cLowerBoundAssignment_3.eContents().get(0);
		private final Keyword cUpperBoundKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cUpperBoundAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cUpperBoundEIntParserRuleCall_5_0 = (RuleCall)cUpperBoundAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Cardinality:
		//	'Cardinality'
		//	'{'
		//	'lowerBound' lowerBound=EInt
		//	'upperBound' upperBound=EInt
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Cardinality' '{' 'lowerBound' lowerBound=EInt 'upperBound' upperBound=EInt '}'
		public Group getGroup() { return cGroup; }
		
		//'Cardinality'
		public Keyword getCardinalityKeyword_0() { return cCardinalityKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'lowerBound'
		public Keyword getLowerBoundKeyword_2() { return cLowerBoundKeyword_2; }
		
		//lowerBound=EInt
		public Assignment getLowerBoundAssignment_3() { return cLowerBoundAssignment_3; }
		
		//EInt
		public RuleCall getLowerBoundEIntParserRuleCall_3_0() { return cLowerBoundEIntParserRuleCall_3_0; }
		
		//'upperBound'
		public Keyword getUpperBoundKeyword_4() { return cUpperBoundKeyword_4; }
		
		//upperBound=EInt
		public Assignment getUpperBoundAssignment_5() { return cUpperBoundAssignment_5; }
		
		//EInt
		public RuleCall getUpperBoundEIntParserRuleCall_5_0() { return cUpperBoundEIntParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EIntElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.smalluml.SmallUML.EInt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//EInt ecore::EInt:
		//	'-'? INT
		@Override public ParserRule getRule() { return rule; }
		
		//'-'? INT
		public Group getGroup() { return cGroup; }
		
		//'-'?
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	
	
	private final PackageElements pPackage;
	private final TypeElements pType;
	private final ClassElements pClass;
	private final RelationElements pRelation;
	private final EStringElements pEString;
	private final AttributeElements pAttribute;
	private final MethodElements pMethod;
	private final Type_ImplElements pType_Impl;
	private final BooleanElements pBoolean;
	private final RealElements pReal;
	private final IntegerElements pInteger;
	private final String0Elements pString0;
	private final InfinityElements pInfinity;
	private final EnumerationElements pEnumeration;
	private final CardinalityElements pCardinality;
	private final EIntElements pEInt;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public SmallUMLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pPackage = new PackageElements();
		this.pType = new TypeElements();
		this.pClass = new ClassElements();
		this.pRelation = new RelationElements();
		this.pEString = new EStringElements();
		this.pAttribute = new AttributeElements();
		this.pMethod = new MethodElements();
		this.pType_Impl = new Type_ImplElements();
		this.pBoolean = new BooleanElements();
		this.pReal = new RealElements();
		this.pInteger = new IntegerElements();
		this.pString0 = new String0Elements();
		this.pInfinity = new InfinityElements();
		this.pEnumeration = new EnumerationElements();
		this.pCardinality = new CardinalityElements();
		this.pEInt = new EIntElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.smalluml.SmallUML".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Package:
	//	{Package}
	//	'Package'
	//	'{' ('class' '{' class+=Class ("," class+=Class)* '}')? ('relation' '{' relation+=Relation ("," relation+=Relation)*
	//	'}')?
	//	'}';
	public PackageElements getPackageAccess() {
		return pPackage;
	}
	
	public ParserRule getPackageRule() {
		return getPackageAccess().getRule();
	}
	
	//Type:
	//	Type_Impl | Boolean | Real | Integer | String0 | Infinity | Enumeration;
	public TypeElements getTypeAccess() {
		return pType;
	}
	
	public ParserRule getTypeRule() {
		return getTypeAccess().getRule();
	}
	
	//Class:
	//	{Class}
	//	'Class'
	//	name=EString
	//	'{' ('parents' '(' parents+=[Class|EString] ("," parents+=[Class|EString])* ')')? ('attributes' '{'
	//	attributes+=Attribute ("," attributes+=Attribute)* '}')? ('methods' '{' methods+=Method ("," methods+=Method)* '}')?
	//	'}';
	public ClassElements getClassAccess() {
		return pClass;
	}
	
	public ParserRule getClassRule() {
		return getClassAccess().getRule();
	}
	
	//Relation:
	//	'Relation'
	//	name=EString
	//	'{'
	//	'from' from=[Class|EString]
	//	'to' to=[Class|EString]
	//	'cardinality' cardinality=Cardinality
	//	'}';
	public RelationElements getRelationAccess() {
		return pRelation;
	}
	
	public ParserRule getRelationRule() {
		return getRelationAccess().getRule();
	}
	
	//EString:
	//	STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Attribute:
	//	'Attribute'
	//	name=EString
	//	'{'
	//	'typedValue' typedValue=Type
	//	'}';
	public AttributeElements getAttributeAccess() {
		return pAttribute;
	}
	
	public ParserRule getAttributeRule() {
		return getAttributeAccess().getRule();
	}
	
	//Method:
	//	{Method}
	//	'Method'
	//	name=EString
	//	'{' ('returnTypedValue' returnTypedValue=Type)? ('parameters' '{' parameters+=Attribute ("," parameters+=Attribute)*
	//	'}')?
	//	'}';
	public MethodElements getMethodAccess() {
		return pMethod;
	}
	
	public ParserRule getMethodRule() {
		return getMethodAccess().getRule();
	}
	
	//Type_Impl Type:
	//	{Type}
	//	'Type'
	public Type_ImplElements getType_ImplAccess() {
		return pType_Impl;
	}
	
	public ParserRule getType_ImplRule() {
		return getType_ImplAccess().getRule();
	}
	
	//Boolean:
	//	{Boolean}
	//	'Boolean';
	public BooleanElements getBooleanAccess() {
		return pBoolean;
	}
	
	public ParserRule getBooleanRule() {
		return getBooleanAccess().getRule();
	}
	
	//Real:
	//	{Real}
	//	'Real';
	public RealElements getRealAccess() {
		return pReal;
	}
	
	public ParserRule getRealRule() {
		return getRealAccess().getRule();
	}
	
	//Integer:
	//	{Integer}
	//	'Integer';
	public IntegerElements getIntegerAccess() {
		return pInteger;
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}
	
	//String0 String:
	//	{String}
	//	'String'
	public String0Elements getString0Access() {
		return pString0;
	}
	
	public ParserRule getString0Rule() {
		return getString0Access().getRule();
	}
	
	//Infinity:
	//	{Infinity}
	//	'Infinity';
	public InfinityElements getInfinityAccess() {
		return pInfinity;
	}
	
	public ParserRule getInfinityRule() {
		return getInfinityAccess().getRule();
	}
	
	//Enumeration:
	//	'Enumeration'
	//	name=EString
	//	'{'
	//	'value' '{' value+=String0 ("," value+=String0)* '}'
	//	'}';
	public EnumerationElements getEnumerationAccess() {
		return pEnumeration;
	}
	
	public ParserRule getEnumerationRule() {
		return getEnumerationAccess().getRule();
	}
	
	//Cardinality:
	//	'Cardinality'
	//	'{'
	//	'lowerBound' lowerBound=EInt
	//	'upperBound' upperBound=EInt
	//	'}';
	public CardinalityElements getCardinalityAccess() {
		return pCardinality;
	}
	
	public ParserRule getCardinalityRule() {
		return getCardinalityAccess().getRule();
	}
	
	//EInt ecore::EInt:
	//	'-'? INT
	public EIntElements getEIntAccess() {
		return pEInt;
	}
	
	public ParserRule getEIntRule() {
		return getEIntAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
